#pragma once

//-----------------------------------------------------------------------------------------
// include
//-----------------------------------------------------------------------------------------
//* c++
#include <cstdint>
#include <iostream>

////////////////////////////////////////////////////////////////////////////////////////////
// Enemy class
////////////////////////////////////////////////////////////////////////////////////////////
class Enemy {
public:

	////////////////////////////////////////////////////////////////////////////////////////////
	// Phase enum class
	////////////////////////////////////////////////////////////////////////////////////////////
	enum class Phase : size_t {
		kPhase_Approach,
		kPhase_Shot,
		kPhase_BreakAway,
		kCountOfPhase
	};

public:

	//=========================================================================================
	// public methods
	//=========================================================================================

	//! @brief 更新処理
	void Update();

private:

	//=========================================================================================
	// private variables
	//=========================================================================================

	static void (Enemy::*PhaseTable[static_cast<size_t>(Phase::kCountOfPhase)])();

	Phase phase_ = Phase::kPhase_Approach;

	//=========================================================================================
	// private methods
	//=========================================================================================

	//! @brief 接近
	void Approach();

	//! @brief 発射
	void Shot();

	//! @brief 離脱
	void BreakAway();

};